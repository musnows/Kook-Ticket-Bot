name: docker images cicd
#触发器设置
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# 项目任务，任务之间可以并行调度
jobs:
  build:
  # 选择云端运行的环境
    runs-on: ubuntu-latest
    steps:
    #u ses代表使用一个模块，此处使用的是checkout模块，将github项目文件导入到当前环境中
    - uses: actions/checkout@v3
    # 使用with跟在后面来为前面的模块输入参数
      with:
        submodules: 'true'
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
    # 这里用到了github的secrets功能，避免账户和密码随仓库泄露
       username: ${{ secrets.DOCKER_USERNAME }}
       password: ${{ secrets.DOCKER_TOKEN }}
    # 设置当前的发行版本tag
    - name: Release version
      id: release_version
      run: |
        app_version=$(cat version.py |sed -ne "s/APP_VERSION\s=\s'v\(.*\)'/\1/gp")
        echo "app_version=$app_version" >> $GITHUB_ENV
    # 开始构建镜像
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: dockerfile
        build-args: |
          GITHUB_TOKEN=${{ secrets.RELEASE_TOKEN }}
        platforms: |
          linux/amd64
          linux/arm64
        push: true
        # 指定用户/仓库名
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/kook-ticket-bot:latest
          ${{ secrets.DOCKER_USERNAME }}/kook-ticket-bot:${{ env.app_version }}
    # 这里是通过md文件自动生成dockerhub描述的模块，也可以不需要
    - name: Docker Hub Description
      uses: peter-evans/dockerhub-description@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: ${{ secrets.DOCKER_USERNAME }}/kook-ticket-bot
        readme-filepath: ./README.md
